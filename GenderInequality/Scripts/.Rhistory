# For example, RemoveDigits(c("INFO 201", "CSE 142"))
RemoveDigits(c("INFO 201","CSE 142"))
# a2-foundational-skills
# Set up and Defining variables -----------------------------------------------------------------
# Install and load the the `stringr` package, which has a variety of built in functions that make working with string variables easier.
install.packages(stringr)
library(stringr)
# Create a numeric variable `my.age` that is equal to your age
my.age <- 19
# Create a variable `my.name` that is equal to your first name
my.name <- "Abhijay"
# Using multiplication, create a variable `minutes.in.a.day` that is equal to the number of minutes in a day
minutes.in.a.day <- 24*60
# Using multiplication, create a variable `hours.in.a.year` that is the number of hours in a year
hours.in.a.year <- 24*365
# Create a variable `more.minutes.than.hours` that is a boolean value (TRUE/FALSE)
# It should be TRUE if there are more minutes in a day than hours in a year, otherwise FALSE
more.minutes.than.hours <- minutes.in.a.day>hours.in.a.year
# Working with functions ----------------------------------------------------------
# Write a function called `MakeIntroduction` that takes in two arguments: name, and age.
# This function should return a string value that says "Hello, my name is {name}, and I'm {age} years old".
MakeIntroduction <- function(name, age) {
answer <- paste(c("Hello, my name is ",name,", and I'm ",age," years old"),collapse = "")
return (answer)
}
# Create a variable `my.intro` by passing your variables `my.name` and `my.age` into your `MakeIntroduction` function
my.intro <- MakeIntroduction(my.name,my.age)
# Create a variable `casual.intro` by substituting "Hello, my name is ", with "Hey, I'm" in your `my.intro` variable
casual.intro <- str_replace_all(str_c(my.intro),c("Hello, my name is " = "Hey, I'm "))
# Create a new variable `loud.intro`, which is your `my.intro` variable in all upper-case letters
loud.intro <- toupper(my.intro)
# Create a new variable `quiet.intro`, which is your `my.intro` variable in all lower-case letters
quiet.intro <- tolower(my.intro)
# Create a new variable capitalized, which is your `my.intro` variable with each word capitalized
# hint: use the stringr function `str_to_title`
capitalized <- str_to_title(my.intro)
# Using the `str_count` function, create a variable `occurrences` that stores the # of times the letter "e" appears in `my.intro`
occurrences <- str_count(my.intro,"e")
# Write another function `Double` that takes in a variable and returns that variable times two
Double <- function(number) {
answer <- number*2
return (answer)
}
# Using your `Double` function, create a variable `minutes.in.two.days`, which is the number of minutes in two days
minutes.in.two.days <- Double(minutes.in.a.day)
# Write another function `ThirdPower` that takes in a value and returns that value cubed
ThirdPower <- function(number) {
answer <- number*number*number
return (answer)
}
# Create a variable `twenty.seven`` by passing the number 3 to your `ThirdPower` function
twenty.seven <- ThirdPower(3)
# Vectors ----------------------------------------------------------------------
# Create a vector `movies` that contains the names of six movies you like
movies <- c('movie1','m2','m3','m4','m5','m6')
# Create a vector `top.three` that only contains the first three movies in the vector
top.three <- c(movies[1],movies[2],movies[3])
# Using your vector and the paste method, create a vector `excited` that adds the phrase -
# " is a great movie!" to the end of each element in your movies vector
excited <- paste(movies," is a great movie!")
# Create a vector `without.four` that has your first three movies, and your 5th and 6th movies.
without.four <- c(movies[1],movies[2],movies[3],movies[5],movies[6])
# Create a vector `numbers` that is the numbers 700 through 999
numbers <- c(700:999)
# Using the built in length function, create a variable `len` that is equal to the length of your vector `numbers`
len <- length(numbers)
# Using the `mean` function, create a variable `numbers.mean` that is the mean of your vector `numbers`
numbers.mean <- mean(numbers)
# Using the `median` function, create a variable `numbers.median` that is the median of your vector `numbers`
numbers.median <- median(numbers)
# Create a vector `lower.numbers` that is the numbers 500:699
lower.numbers <- c(500:699)
# Create a vector `all.numbers` that combines your `lower.numbers` and `numbers` vectors
all.numbers <- c(lower.numbers,numbers)
# Dates ----------------------------------------------------------------------------
# Use the `as.Date()` function to create a variable `today` that represents today's date
# You can pass in a character string of the day you wrote this, or you can get the current date
# Hint: https://www.rdocumentation.org/packages/base/versions/3.3.2/topics/Sys.time
today <- as.Date("10/12/17", "%m/%d/%y")
# Create a variable `winter.break` that represents the first day of Winter break (December 15, 2017).
# Make sure to use the `as.Date` function again
winter.break <- as.Date("12/15/17", "%m/%d/%y")
# Create a variable `days.to.break` that is how many days until break (hint: subtract the dates!)
days.to.break <- winter.break-today
# Define a function called `MakeBirthdayIntro` that takes in three arguments:
# a name, an age, and a character string for your next (upcoming) birthday.
# This method should return a character string of the format:
#  "Hello, my name is {name} and I'm {age} years old. In {N} days I'll be {new.age}"
# You should utilize your `MakeIntroduction()` function from Part 1, and compute {N} and {new.age} in your function
MakeBirthdayIntro <- function(name,age,bday) {
bday <- as.Date(bday, "%m/%d/%y")
days.to.bday <- bday-today
answer <- paste(c(my.intro,". In ",days.to.bday," days I'll be ",(age+1)),collapse = "")
return (answer)
}
# Create a variable `my.bday.intro` using the `MakeBirthdayIntro` function, passing in `my.name`, `my.age`, and your upcoming birthday.
my.bday.intro <- MakeBirthdayIntro(my.name,my.age,"1/7/18")
# Challenge ------------------------------------------------------------------
# Write a function `RemoveDigits` that will remove all digits (i.e., 0 through 9) from all elements in a *vector of strings*.
RemoveDigits <- function(vect) {
answer <- str_replace_all(str_c(vect),c('0'='','1'='','2'='','3'='','4'='','5'='','6'='','7'='','8'='','9'=''))
return (answer)
}
# Demonstrate that your approach is successful by passing a vector of courses to your function
# For example, RemoveDigits(c("INFO 201", "CSE 142"))
RemoveDigits(c("INFO 201","CSE 142"))
library(dplyr)
library(dplyr)
library(knitr)
library("ggplot2")
library(plotly)
countries.a.l <- read.csv('../Data/250e7195-27cb-4e86-a87c-6856a3fa54e9_Data.csv',stringsAsFactors = FALSE)
countries.l.z <- read.csv('../Data/eae414b7-55b2-4c9b-b63f-ed07e4a90bc8_Data.csv',stringsAsFactors = FALSE)
countries <- rbind(countries.a.l, countries.l.z)
countries <- mutate(countries, NA_count = rowSums(is.na(countries)))
countries.filtered.48 <- filter(countries, NA_count < 48)
colnames(countries.filtered.48)[1] <- ("Series")
#unique(countries.filtered.48$Series)
countries.filtered.48.summary.by.country <- group_by(countries.filtered.48, Country.Name) %>%
summarise(count=n())
countries.filtered.48.summary.by.series <- group_by(countries.filtered.48, Series) %>%
summarise(count=n())
countries.filtered.48.edu.employ1.employ2 <- filter(countries.filtered.48, Series.Code == "SE.PRM.TENR.FE" | Series.Code == "SE.PRM.TENR.MA"
| Series.Code == "SE.SEC.CMPT.LO.FE.ZS" | Series.Code == "SE.SEC.CMPT.LO.MA.ZS"
#| Series.Code == "SE.PRM.NINT.FE.ZS" | Series.Code == "SE.PRM.NINT.MA.ZS"
| Series.Code == "SE.PRM.PRS5.FE.ZS" | Series.Code == "SE.PRM.PRS5.MA.ZS"
| Series.Code == "SE.PRM.CMPT.FE.ZS" | Series.Code == "SE.PRM.CMPT.MA.ZS"
| Series.Code == "SE.SEC.PROG.FE.ZS" | Series.Code == "SE.SEC.PROG.MA.ZS"
#| Series.Code == "SE.PRM.CMPL.FE.ZS" | Series.Code == "SE.PRM.CMPL.MA.ZS"
| Series.Code == "SE.SCH.LIFE.FE" | Series.Code == "SE.SCH.LIFE.MA"
#| ((Series.Code == "SL.EMP.SELF.FE.ZS" | Series.Code == "SL.EMP.SELF.MA.ZS")&Country.Code == "CAN")
# was meant to filter Canada own-account after having series code changed but Canada already had self-employed
| Series.Code == "SL.EMP.OWAC.FE.ZS" | Series.Code == "SL.EMP.OWAC.MA.ZS"
| Series.Code == "IC.REG.COST.PC.FE.ZS" | Series.Code == "IC.REG.COST.PC.MA.ZS"
| Series.Code == "IC.REG.PROC.FE" | Series.Code == "IC.REG.PROC.MA"
| Series.Code == "IC.REG.DURS.FE" | Series.Code == "IC.REG.DURS.MA"
| Series.Code == "SL.EMP.WORK.FE.ZS" | Series.Code == "SL.EMP.WORK.MA.ZS"
#| Series.Code == "SL.EMP.SMGT.FE.ZS" | Series.Code == "SL.EMP.SMGT.MA.ZS"
| Series.Code == "SL.TLF.TOTL.FE.ZS" | Series.Code == "SL.TLF.TOTL.MA.ZS"
| Series.Code == "SL.UEM.1524.FM.ZS" | Series.Code == "SL.UEM.1524.MA.ZS"
| Series.Code == "SL.EMP.VULN.FE.ZS" | Series.Code == "SL.EMP.VULN.MA.ZS"
#| Series.Code == "SL.EMP.UNDR.FE.ZS" | Series.Code == "SL.EMP.UNDR.MA.ZS"
| Series.Code == "SL.UEM.TOTL.FE.ZS" | Series.Code == "SL.UEM.TOTL.MA.ZS"
| Series.Code == "SG.GEN.PARL.ZS"
)
countries.filtered.48.edu.employ1.employ2.by.country <- group_by(countries.filtered.48.edu.employ1.employ2, Country.Name) %>%
summarise(count=n())
countries.filtered.48.edu.employ.good.data <- filter(countries.filtered.48.edu.employ1.employ2,
#  Country.Code == "ARG"
Country.Code == "MAR"
| Country.Code == "KOR"
| Country.Code == "MEX"
#| Country.Code == "PRY"
#| Country.Code == "ESP"
| Country.Code == "ARE"
#| Country.Code == "ETH"
| Country.Code == "SWE"
#| Country.Code == "BTN"
| Country.Code == "COL"
| Country.Code == "BWA"
| Country.Code == "ISR"
#| Country.Code == "GHA"
| Country.Code == "MYS"
| Country.Code == "CAN"
)
countries.filtered.48.edu.employ.good.by.country <- group_by(countries.filtered.48.edu.employ.good.data, Country.Name) %>%
summarise(count=n())
setwd("C:/Users/Abhijay/Desktop/INFO 201/INFO-201-AA5-Project/Scripts")
library(dplyr)
library(knitr)
library("ggplot2")
library(plotly)
countries.a.l <- read.csv('../Data/250e7195-27cb-4e86-a87c-6856a3fa54e9_Data.csv',stringsAsFactors = FALSE)
countries.l.z <- read.csv('../Data/eae414b7-55b2-4c9b-b63f-ed07e4a90bc8_Data.csv',stringsAsFactors = FALSE)
countries <- rbind(countries.a.l, countries.l.z)
countries <- mutate(countries, NA_count = rowSums(is.na(countries)))
countries.filtered.48 <- filter(countries, NA_count < 48)
colnames(countries.filtered.48)[1] <- ("Series")
#unique(countries.filtered.48$Series)
countries.filtered.48.summary.by.country <- group_by(countries.filtered.48, Country.Name) %>%
summarise(count=n())
countries.filtered.48.summary.by.series <- group_by(countries.filtered.48, Series) %>%
summarise(count=n())
countries.filtered.48.edu.employ1.employ2 <- filter(countries.filtered.48, Series.Code == "SE.PRM.TENR.FE" | Series.Code == "SE.PRM.TENR.MA"
| Series.Code == "SE.SEC.CMPT.LO.FE.ZS" | Series.Code == "SE.SEC.CMPT.LO.MA.ZS"
#| Series.Code == "SE.PRM.NINT.FE.ZS" | Series.Code == "SE.PRM.NINT.MA.ZS"
| Series.Code == "SE.PRM.PRS5.FE.ZS" | Series.Code == "SE.PRM.PRS5.MA.ZS"
| Series.Code == "SE.PRM.CMPT.FE.ZS" | Series.Code == "SE.PRM.CMPT.MA.ZS"
| Series.Code == "SE.SEC.PROG.FE.ZS" | Series.Code == "SE.SEC.PROG.MA.ZS"
#| Series.Code == "SE.PRM.CMPL.FE.ZS" | Series.Code == "SE.PRM.CMPL.MA.ZS"
| Series.Code == "SE.SCH.LIFE.FE" | Series.Code == "SE.SCH.LIFE.MA"
#| ((Series.Code == "SL.EMP.SELF.FE.ZS" | Series.Code == "SL.EMP.SELF.MA.ZS")&Country.Code == "CAN")
# was meant to filter Canada own-account after having series code changed but Canada already had self-employed
| Series.Code == "SL.EMP.OWAC.FE.ZS" | Series.Code == "SL.EMP.OWAC.MA.ZS"
| Series.Code == "IC.REG.COST.PC.FE.ZS" | Series.Code == "IC.REG.COST.PC.MA.ZS"
| Series.Code == "IC.REG.PROC.FE" | Series.Code == "IC.REG.PROC.MA"
| Series.Code == "IC.REG.DURS.FE" | Series.Code == "IC.REG.DURS.MA"
| Series.Code == "SL.EMP.WORK.FE.ZS" | Series.Code == "SL.EMP.WORK.MA.ZS"
#| Series.Code == "SL.EMP.SMGT.FE.ZS" | Series.Code == "SL.EMP.SMGT.MA.ZS"
| Series.Code == "SL.TLF.TOTL.FE.ZS" | Series.Code == "SL.TLF.TOTL.MA.ZS"
| Series.Code == "SL.UEM.1524.FM.ZS" | Series.Code == "SL.UEM.1524.MA.ZS"
| Series.Code == "SL.EMP.VULN.FE.ZS" | Series.Code == "SL.EMP.VULN.MA.ZS"
#| Series.Code == "SL.EMP.UNDR.FE.ZS" | Series.Code == "SL.EMP.UNDR.MA.ZS"
| Series.Code == "SL.UEM.TOTL.FE.ZS" | Series.Code == "SL.UEM.TOTL.MA.ZS"
| Series.Code == "SG.GEN.PARL.ZS"
)
countries.filtered.48.edu.employ1.employ2.by.country <- group_by(countries.filtered.48.edu.employ1.employ2, Country.Name) %>%
summarise(count=n())
countries.filtered.48.edu.employ.good.data <- filter(countries.filtered.48.edu.employ1.employ2,
#  Country.Code == "ARG"
Country.Code == "MAR"
| Country.Code == "KOR"
| Country.Code == "MEX"
#| Country.Code == "PRY"
#| Country.Code == "ESP"
| Country.Code == "ARE"
#| Country.Code == "ETH"
| Country.Code == "SWE"
#| Country.Code == "BTN"
| Country.Code == "COL"
| Country.Code == "BWA"
| Country.Code == "ISR"
#| Country.Code == "GHA"
| Country.Code == "MYS"
| Country.Code == "CAN"
)
countries.filtered.48.edu.employ.good.by.country <- group_by(countries.filtered.48.edu.employ.good.data, Country.Name) %>%
summarise(count=n())
temp <- filter(countries.filtered.48.edu.employ.good.data,Series.Code == 'SL.UEM.1524.FM.ZS')
temp[36,1]
View(temp)
temp[37,1]
temp[40,1]
temp[40,2]
temp[40,11]
temp[1,36]
temp[1,36:62]
temp[1,36:62] <- temp[1,36:62]/(temp[1,36:62]+100)
temp[1,36:62] <- temp[1,36:62]/(temp[1,36:62]+100)*100
View(temp)
temp[1,36:62] <- temp[1,36:62]/(temp[1,36:62]+100)*100
temp <- filter(countries.filtered.48.edu.employ.good.data,Series.Code == 'SL.UEM.1524.FM.ZS')
temp[1,36:62] <- temp[1,36:62]/(temp[1,36:62]+100)*100
temp <- filter(countries.filtered.48.edu.employ.good.data,Series.Code == 'SL.UEM.1524.FM.ZS')
temp[1:10,36:62] <- temp[1:10,36:62]/(temp[1:10,36:62]+100)*100
temp <- filter(countries.filtered.48.edu.employ.good.data,Series.Code == 'SL.UEM.1524.FM.ZS')
temp[1:10,36:62] <- temp[1:10,36:62]/(temp[1:10,36:62]+100)*100
plot.data.2 <- rbind(countries.filtered.48.edu.employ.good.data,temp)
library(dplyr)
library(knitr)
library("ggplot2")
library(plotly)
countries.a.l <- read.csv('../Data/250e7195-27cb-4e86-a87c-6856a3fa54e9_Data.csv',stringsAsFactors = FALSE)
countries.l.z <- read.csv('../Data/eae414b7-55b2-4c9b-b63f-ed07e4a90bc8_Data.csv',stringsAsFactors = FALSE)
countries <- rbind(countries.a.l, countries.l.z)
countries <- mutate(countries, NA_count = rowSums(is.na(countries)))
countries.filtered.48 <- filter(countries, NA_count < 48)
colnames(countries.filtered.48)[1] <- ("Series")
#unique(countries.filtered.48$Series)
countries.filtered.48.summary.by.country <- group_by(countries.filtered.48, Country.Name) %>%
summarise(count=n())
countries.filtered.48.summary.by.series <- group_by(countries.filtered.48, Series) %>%
summarise(count=n())
countries.filtered.48.edu.employ1.employ2 <- filter(countries.filtered.48, Series.Code == "SE.PRM.TENR.FE" | Series.Code == "SE.PRM.TENR.MA"
| Series.Code == "SE.SEC.CMPT.LO.FE.ZS" | Series.Code == "SE.SEC.CMPT.LO.MA.ZS"
#| Series.Code == "SE.PRM.NINT.FE.ZS" | Series.Code == "SE.PRM.NINT.MA.ZS"
| Series.Code == "SE.PRM.PRS5.FE.ZS" | Series.Code == "SE.PRM.PRS5.MA.ZS"
| Series.Code == "SE.PRM.CMPT.FE.ZS" | Series.Code == "SE.PRM.CMPT.MA.ZS"
| Series.Code == "SE.SEC.PROG.FE.ZS" | Series.Code == "SE.SEC.PROG.MA.ZS"
#| Series.Code == "SE.PRM.CMPL.FE.ZS" | Series.Code == "SE.PRM.CMPL.MA.ZS"
| Series.Code == "SE.SCH.LIFE.FE" | Series.Code == "SE.SCH.LIFE.MA"
#| ((Series.Code == "SL.EMP.SELF.FE.ZS" | Series.Code == "SL.EMP.SELF.MA.ZS")&Country.Code == "CAN")
# was meant to filter Canada own-account after having series code changed but Canada already had self-employed
| Series.Code == "SL.EMP.OWAC.FE.ZS" | Series.Code == "SL.EMP.OWAC.MA.ZS"
| Series.Code == "IC.REG.COST.PC.FE.ZS" | Series.Code == "IC.REG.COST.PC.MA.ZS"
| Series.Code == "IC.REG.PROC.FE" | Series.Code == "IC.REG.PROC.MA"
| Series.Code == "IC.REG.DURS.FE" | Series.Code == "IC.REG.DURS.MA"
| Series.Code == "SL.EMP.WORK.FE.ZS" | Series.Code == "SL.EMP.WORK.MA.ZS"
#| Series.Code == "SL.EMP.SMGT.FE.ZS" | Series.Code == "SL.EMP.SMGT.MA.ZS"
| Series.Code == "SL.TLF.TOTL.FE.ZS" | Series.Code == "SL.TLF.TOTL.MA.ZS"
| Series.Code == "SL.UEM.1524.FM.ZS" | Series.Code == "SL.UEM.1524.MA.ZS"
| Series.Code == "SL.EMP.VULN.FE.ZS" | Series.Code == "SL.EMP.VULN.MA.ZS"
#| Series.Code == "SL.EMP.UNDR.FE.ZS" | Series.Code == "SL.EMP.UNDR.MA.ZS"
| Series.Code == "SL.UEM.TOTL.FE.ZS" | Series.Code == "SL.UEM.TOTL.MA.ZS"
| Series.Code == "SG.GEN.PARL.ZS"
)
countries.filtered.48.edu.employ1.employ2.by.country <- group_by(countries.filtered.48.edu.employ1.employ2, Country.Name) %>%
summarise(count=n())
countries.filtered.48.edu.employ.good.data <- filter(countries.filtered.48.edu.employ1.employ2,
#  Country.Code == "ARG"
Country.Code == "MAR"
| Country.Code == "KOR"
| Country.Code == "MEX"
#| Country.Code == "PRY"
#| Country.Code == "ESP"
| Country.Code == "ARE"
#| Country.Code == "ETH"
| Country.Code == "SWE"
#| Country.Code == "BTN"
| Country.Code == "COL"
| Country.Code == "BWA"
| Country.Code == "ISR"
#| Country.Code == "GHA"
| Country.Code == "MYS"
| Country.Code == "CAN"
)
countries.filtered.48.edu.employ.good.by.country <- group_by(countries.filtered.48.edu.employ.good.data, Country.Name) %>%
summarise(count=n())
temp <- filter(countries.filtered.48.edu.employ.good.data,Series.Code == 'SL.UEM.1524.FM.ZS')
temp[1:10,36:62] <- temp[1:10,36:62]/(temp[1:10,36:62]+100)*100
plot.data.2 <- rbind(countries.filtered.48.edu.employ.good.data,temp)
View(countries.filtered.48.edu.employ.good.data)
View(temp)
View(plot.data.2)
temp <- filter(countries.filtered.48.edu.employ.good.data,Series.Code == 'SL.UEM.1524.FM.ZS')
temp[1:10,36:62] <- temp[1:10,36:62]/(temp[1:10,36:62]+100)*100
temp.2 <- filter(countries.filtered.48.edu.employ.good.data,Series.Code != 'SL.UEM.1524.FM.ZS')
countries.filtered.48.edu.employ.good.by.country <- rbind(temp,temp.2)
library(dplyr)
library(knitr)
library("ggplot2")
library(plotly)
countries.a.l <- read.csv('../Data/250e7195-27cb-4e86-a87c-6856a3fa54e9_Data.csv',stringsAsFactors = FALSE)
countries.l.z <- read.csv('../Data/eae414b7-55b2-4c9b-b63f-ed07e4a90bc8_Data.csv',stringsAsFactors = FALSE)
countries <- rbind(countries.a.l, countries.l.z)
countries <- mutate(countries, NA_count = rowSums(is.na(countries)))
countries.filtered.48 <- filter(countries, NA_count < 48)
colnames(countries.filtered.48)[1] <- ("Series")
#unique(countries.filtered.48$Series)
countries.filtered.48.summary.by.country <- group_by(countries.filtered.48, Country.Name) %>%
summarise(count=n())
countries.filtered.48.summary.by.series <- group_by(countries.filtered.48, Series) %>%
summarise(count=n())
countries.filtered.48.edu.employ1.employ2 <- filter(countries.filtered.48, Series.Code == "SE.PRM.TENR.FE" | Series.Code == "SE.PRM.TENR.MA"
| Series.Code == "SE.SEC.CMPT.LO.FE.ZS" | Series.Code == "SE.SEC.CMPT.LO.MA.ZS"
#| Series.Code == "SE.PRM.NINT.FE.ZS" | Series.Code == "SE.PRM.NINT.MA.ZS"
| Series.Code == "SE.PRM.PRS5.FE.ZS" | Series.Code == "SE.PRM.PRS5.MA.ZS"
| Series.Code == "SE.PRM.CMPT.FE.ZS" | Series.Code == "SE.PRM.CMPT.MA.ZS"
| Series.Code == "SE.SEC.PROG.FE.ZS" | Series.Code == "SE.SEC.PROG.MA.ZS"
#| Series.Code == "SE.PRM.CMPL.FE.ZS" | Series.Code == "SE.PRM.CMPL.MA.ZS"
| Series.Code == "SE.SCH.LIFE.FE" | Series.Code == "SE.SCH.LIFE.MA"
#| ((Series.Code == "SL.EMP.SELF.FE.ZS" | Series.Code == "SL.EMP.SELF.MA.ZS")&Country.Code == "CAN")
# was meant to filter Canada own-account after having series code changed but Canada already had self-employed
| Series.Code == "SL.EMP.OWAC.FE.ZS" | Series.Code == "SL.EMP.OWAC.MA.ZS"
| Series.Code == "IC.REG.COST.PC.FE.ZS" | Series.Code == "IC.REG.COST.PC.MA.ZS"
| Series.Code == "IC.REG.PROC.FE" | Series.Code == "IC.REG.PROC.MA"
| Series.Code == "IC.REG.DURS.FE" | Series.Code == "IC.REG.DURS.MA"
| Series.Code == "SL.EMP.WORK.FE.ZS" | Series.Code == "SL.EMP.WORK.MA.ZS"
#| Series.Code == "SL.EMP.SMGT.FE.ZS" | Series.Code == "SL.EMP.SMGT.MA.ZS"
| Series.Code == "SL.TLF.TOTL.FE.ZS" | Series.Code == "SL.TLF.TOTL.MA.ZS"
| Series.Code == "SL.UEM.1524.FM.ZS" | Series.Code == "SL.UEM.1524.MA.ZS"
| Series.Code == "SL.EMP.VULN.FE.ZS" | Series.Code == "SL.EMP.VULN.MA.ZS"
#| Series.Code == "SL.EMP.UNDR.FE.ZS" | Series.Code == "SL.EMP.UNDR.MA.ZS"
| Series.Code == "SL.UEM.TOTL.FE.ZS" | Series.Code == "SL.UEM.TOTL.MA.ZS"
| Series.Code == "SG.GEN.PARL.ZS"
)
countries.filtered.48.edu.employ1.employ2.by.country <- group_by(countries.filtered.48.edu.employ1.employ2, Country.Name) %>%
summarise(count=n())
countries.filtered.48.edu.employ.good.data <- filter(countries.filtered.48.edu.employ1.employ2,
#  Country.Code == "ARG"
Country.Code == "MAR"
| Country.Code == "KOR"
| Country.Code == "MEX"
#| Country.Code == "PRY"
#| Country.Code == "ESP"
| Country.Code == "ARE"
#| Country.Code == "ETH"
| Country.Code == "SWE"
#| Country.Code == "BTN"
| Country.Code == "COL"
| Country.Code == "BWA"
| Country.Code == "ISR"
#| Country.Code == "GHA"
| Country.Code == "MYS"
| Country.Code == "CAN"
)
countries.filtered.48.edu.employ.good.by.country <- group_by(countries.filtered.48.edu.employ.good.data, Country.Name) %>%
summarise(count=n())
temp <- filter(countries.filtered.48.edu.employ.good.data,Series.Code == 'SL.UEM.1524.FM.ZS')
temp[1:10,36:62] <- temp[1:10,36:62]/(temp[1:10,36:62]+100)*100
temp.2 <- filter(countries.filtered.48.edu.employ.good.data,Series.Code != 'SL.UEM.1524.FM.ZS')
countries.filtered.48.edu.employ.good.by.country <- rbind(temp,temp.2)
View(countries.filtered.48.edu.employ.good.data)
library(dplyr)
library(knitr)
library("ggplot2")
library(plotly)
countries.a.l <- read.csv('../Data/250e7195-27cb-4e86-a87c-6856a3fa54e9_Data.csv',stringsAsFactors = FALSE)
countries.l.z <- read.csv('../Data/eae414b7-55b2-4c9b-b63f-ed07e4a90bc8_Data.csv',stringsAsFactors = FALSE)
countries <- rbind(countries.a.l, countries.l.z)
countries <- mutate(countries, NA_count = rowSums(is.na(countries)))
countries.filtered.48 <- filter(countries, NA_count < 48)
colnames(countries.filtered.48)[1] <- ("Series")
#unique(countries.filtered.48$Series)
countries.filtered.48.summary.by.country <- group_by(countries.filtered.48, Country.Name) %>%
summarise(count=n())
countries.filtered.48.summary.by.series <- group_by(countries.filtered.48, Series) %>%
summarise(count=n())
countries.filtered.48.edu.employ1.employ2 <- filter(countries.filtered.48, Series.Code == "SE.PRM.TENR.FE" | Series.Code == "SE.PRM.TENR.MA"
| Series.Code == "SE.SEC.CMPT.LO.FE.ZS" | Series.Code == "SE.SEC.CMPT.LO.MA.ZS"
#| Series.Code == "SE.PRM.NINT.FE.ZS" | Series.Code == "SE.PRM.NINT.MA.ZS"
| Series.Code == "SE.PRM.PRS5.FE.ZS" | Series.Code == "SE.PRM.PRS5.MA.ZS"
| Series.Code == "SE.PRM.CMPT.FE.ZS" | Series.Code == "SE.PRM.CMPT.MA.ZS"
| Series.Code == "SE.SEC.PROG.FE.ZS" | Series.Code == "SE.SEC.PROG.MA.ZS"
#| Series.Code == "SE.PRM.CMPL.FE.ZS" | Series.Code == "SE.PRM.CMPL.MA.ZS"
| Series.Code == "SE.SCH.LIFE.FE" | Series.Code == "SE.SCH.LIFE.MA"
#| ((Series.Code == "SL.EMP.SELF.FE.ZS" | Series.Code == "SL.EMP.SELF.MA.ZS")&Country.Code == "CAN")
# was meant to filter Canada own-account after having series code changed but Canada already had self-employed
| Series.Code == "SL.EMP.OWAC.FE.ZS" | Series.Code == "SL.EMP.OWAC.MA.ZS"
| Series.Code == "IC.REG.COST.PC.FE.ZS" | Series.Code == "IC.REG.COST.PC.MA.ZS"
| Series.Code == "IC.REG.PROC.FE" | Series.Code == "IC.REG.PROC.MA"
| Series.Code == "IC.REG.DURS.FE" | Series.Code == "IC.REG.DURS.MA"
| Series.Code == "SL.EMP.WORK.FE.ZS" | Series.Code == "SL.EMP.WORK.MA.ZS"
#| Series.Code == "SL.EMP.SMGT.FE.ZS" | Series.Code == "SL.EMP.SMGT.MA.ZS"
| Series.Code == "SL.TLF.TOTL.FE.ZS" | Series.Code == "SL.TLF.TOTL.MA.ZS"
| Series.Code == "SL.UEM.1524.FM.ZS" | Series.Code == "SL.UEM.1524.MA.ZS"
| Series.Code == "SL.EMP.VULN.FE.ZS" | Series.Code == "SL.EMP.VULN.MA.ZS"
#| Series.Code == "SL.EMP.UNDR.FE.ZS" | Series.Code == "SL.EMP.UNDR.MA.ZS"
| Series.Code == "SL.UEM.TOTL.FE.ZS" | Series.Code == "SL.UEM.TOTL.MA.ZS"
| Series.Code == "SG.GEN.PARL.ZS"
)
countries.filtered.48.edu.employ1.employ2.by.country <- group_by(countries.filtered.48.edu.employ1.employ2, Country.Name) %>%
summarise(count=n())
countries.filtered.48.edu.employ.good.data <- filter(countries.filtered.48.edu.employ1.employ2,
#  Country.Code == "ARG"
Country.Code == "MAR"
| Country.Code == "KOR"
| Country.Code == "MEX"
#| Country.Code == "PRY"
#| Country.Code == "ESP"
| Country.Code == "ARE"
#| Country.Code == "ETH"
| Country.Code == "SWE"
#| Country.Code == "BTN"
| Country.Code == "COL"
| Country.Code == "BWA"
| Country.Code == "ISR"
#| Country.Code == "GHA"
| Country.Code == "MYS"
| Country.Code == "CAN"
)
countries.filtered.48.edu.employ.good.by.country <- group_by(countries.filtered.48.edu.employ.good.data, Country.Name) %>%
summarise(count=n())
temp <- filter(countries.filtered.48.edu.employ.good.data,Series.Code == 'SL.UEM.1524.FM.ZS')
temp[1:10,36:62] <- temp[1:10,36:62]/(temp[1:10,36:62]+100)*100
temp.2 <- filter(countries.filtered.48.edu.employ.good.data,Series.Code != 'SL.UEM.1524.FM.ZS')
countries.filtered.48.edu.employ.good.data <- rbind(temp,temp.2)
View(countries.filtered.48.edu.employ.good.data)
library(dplyr)
library(knitr)
library("ggplot2")
library(plotly)
countries.a.l <- read.csv('../Data/250e7195-27cb-4e86-a87c-6856a3fa54e9_Data.csv',stringsAsFactors = FALSE)
countries.l.z <- read.csv('../Data/eae414b7-55b2-4c9b-b63f-ed07e4a90bc8_Data.csv',stringsAsFactors = FALSE)
countries <- rbind(countries.a.l, countries.l.z)
countries <- mutate(countries, NA_count = rowSums(is.na(countries)))
countries.filtered.48 <- filter(countries, NA_count < 48)
colnames(countries.filtered.48)[1] <- ("Series")
#unique(countries.filtered.48$Series)
countries.filtered.48.summary.by.country <- group_by(countries.filtered.48, Country.Name) %>%
summarise(count=n())
countries.filtered.48.summary.by.series <- group_by(countries.filtered.48, Series) %>%
summarise(count=n())
countries.filtered.48.edu.employ1.employ2 <- filter(countries.filtered.48, Series.Code == "SE.PRM.TENR.FE" | Series.Code == "SE.PRM.TENR.MA"
| Series.Code == "SE.SEC.CMPT.LO.FE.ZS" | Series.Code == "SE.SEC.CMPT.LO.MA.ZS"
#| Series.Code == "SE.PRM.NINT.FE.ZS" | Series.Code == "SE.PRM.NINT.MA.ZS"
| Series.Code == "SE.PRM.PRS5.FE.ZS" | Series.Code == "SE.PRM.PRS5.MA.ZS"
| Series.Code == "SE.PRM.CMPT.FE.ZS" | Series.Code == "SE.PRM.CMPT.MA.ZS"
| Series.Code == "SE.SEC.PROG.FE.ZS" | Series.Code == "SE.SEC.PROG.MA.ZS"
#| Series.Code == "SE.PRM.CMPL.FE.ZS" | Series.Code == "SE.PRM.CMPL.MA.ZS"
| Series.Code == "SE.SCH.LIFE.FE" | Series.Code == "SE.SCH.LIFE.MA"
#| ((Series.Code == "SL.EMP.SELF.FE.ZS" | Series.Code == "SL.EMP.SELF.MA.ZS")&Country.Code == "CAN")
# was meant to filter Canada own-account after having series code changed but Canada already had self-employed
| Series.Code == "SL.EMP.OWAC.FE.ZS" | Series.Code == "SL.EMP.OWAC.MA.ZS"
| Series.Code == "IC.REG.COST.PC.FE.ZS" | Series.Code == "IC.REG.COST.PC.MA.ZS"
| Series.Code == "IC.REG.PROC.FE" | Series.Code == "IC.REG.PROC.MA"
| Series.Code == "IC.REG.DURS.FE" | Series.Code == "IC.REG.DURS.MA"
| Series.Code == "SL.EMP.WORK.FE.ZS" | Series.Code == "SL.EMP.WORK.MA.ZS"
#| Series.Code == "SL.EMP.SMGT.FE.ZS" | Series.Code == "SL.EMP.SMGT.MA.ZS"
| Series.Code == "SL.TLF.TOTL.FE.ZS" | Series.Code == "SL.TLF.TOTL.MA.ZS"
| Series.Code == "SL.UEM.1524.FM.ZS" #| Series.Code == "SL.UEM.1524.MA.ZS"
| Series.Code == "SL.EMP.VULN.FE.ZS" | Series.Code == "SL.EMP.VULN.MA.ZS"
#| Series.Code == "SL.EMP.UNDR.FE.ZS" | Series.Code == "SL.EMP.UNDR.MA.ZS"
| Series.Code == "SL.UEM.TOTL.FE.ZS" | Series.Code == "SL.UEM.TOTL.MA.ZS"
| Series.Code == "SG.GEN.PARL.ZS"
)
countries.filtered.48.edu.employ1.employ2.by.country <- group_by(countries.filtered.48.edu.employ1.employ2, Country.Name) %>%
summarise(count=n())
countries.filtered.48.edu.employ.good.data <- filter(countries.filtered.48.edu.employ1.employ2,
#  Country.Code == "ARG"
Country.Code == "MAR"
| Country.Code == "KOR"
| Country.Code == "MEX"
#| Country.Code == "PRY"
#| Country.Code == "ESP"
| Country.Code == "ARE"
#| Country.Code == "ETH"
| Country.Code == "SWE"
#| Country.Code == "BTN"
| Country.Code == "COL"
| Country.Code == "BWA"
| Country.Code == "ISR"
#| Country.Code == "GHA"
| Country.Code == "MYS"
| Country.Code == "CAN"
)
countries.filtered.48.edu.employ.good.by.country <- group_by(countries.filtered.48.edu.employ.good.data, Country.Name) %>%
summarise(count=n())
temp <- filter(countries.filtered.48.edu.employ.good.data,Series.Code == 'SL.UEM.1524.FM.ZS')
temp[1:10,36:62] <- temp[1:10,36:62]/(temp[1:10,36:62]+100)*100
temp.2 <- filter(countries.filtered.48.edu.employ.good.data,Series.Code != 'SL.UEM.1524.FM.ZS')
countries.filtered.48.edu.employ.good.data <- rbind(temp,temp.2)
